---
title: "HW2 Dream Job"
author: "Logan Judkins, Diego Padilla 48392335, Grant Polychronis, Aparna Subramanian"
date: "2/28/2021"
output: pdf_document
---

```{r,echo=FALSE,warning=FALSE,message=FALSE}
library(tidyverse)
library(broom)
library(GGally)
```

```{r,echo=FALSE}
#set working directory
setwd("C:/Users/diego/OneDrive/Desktop/MAST 6251/Applied Predictive Analytics")
```

```{r,echo=FALSE}
NFL <- read.csv("NFL Play by Play 2009-2016 (v3).csv", fileEncoding = "UTF-8-BOM")
#save(NFL_Game, file = "Data/NFL.RData")
#load("Data/NFL.RData")
```

```{r,echo=FALSE}
#Check for missing values
missing_values <- sapply(NFL, function(x) sum(is.na(x)))
missing_values
```

```{r,echo=FALSE}
#Changing variable types
NFL <- data.frame(lapply(NFL, as.character), stringsAsFactors=FALSE)                         
NFL$Touchdown <- as.integer(NFL$Touchdown)
NFL$sp <- as.integer(NFL$sp)
NFL$PosTeamScore <- as.integer(NFL$PosTeamScore)

# Adding Home and Away teams' scores
NFL <- mutate(NFL, 
                  HomeTeamScore = ifelse(posteam == HomeTeam, PosTeamScore + Touchdown*6 + ifelse(FieldGoalResult == "Good",3,0), DefTeamScore),
                  AwayTeamScore = ifelse(posteam == AwayTeam, PosTeamScore + Touchdown*6 + ifelse(FieldGoalResult == "Good",3,0), DefTeamScore)
)
```

```{r,echo=FALSE}
#Fix Team Issues
NFL[NFL==""]<-NA
NFL <- fill(data = NFL, posteam)       
```

```{r,echo=FALSE}
#Creating HomeWin variable
typeof(NFL$HomeTeamScore)
NFL$HomeTeamScore <- as.integer(NFL$HomeTeamScore)
NFL <- NFL %>% group_by(GameID)  %>% mutate(FinalHomeScore = max(HomeTeamScore, na.rm = T))
typeof(NFL$AwayTeamScore)
NFL$AwayTeamScore <- as.integer(NFL$AwayTeamScore)
NFL <- NFL %>% group_by(GameID)  %>% mutate(FinalAwayScore = max(AwayTeamScore, na.rm = T)) 
NFL <- mutate(NFL, HomeWin = ifelse(FinalHomeScore > FinalAwayScore, 1, 0))   
```

```{r,echo=FALSE}
#Changing type for AirYards and YardsAfterCatch
typeof(NFL$AirYards)
NFL$AirYards <- as.integer(NFL$AirYards)
typeof(NFL$YardsAfterCatch)
NFL$YardsAfterCatch <- as.integer(NFL$YardsAfterCatch)

#Create new yard variables
NFL <- mutate(NFL, HomePassYards = ifelse(posteam == HomeTeam & PassOutcome == "Complete", AirYards + YardsAfterCatch,0))
NFL <- mutate(NFL, AwayPassYards = ifelse(posteam == AwayTeam & PassOutcome == "Complete", AirYards + YardsAfterCatch,0))
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomePass = sum(HomePassYards, na.rm = T))
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayPass = sum(AwayPassYards, na.rm=T))
NFL <- mutate(NFL, HomeRushYards = ifelse(posteam == HomeTeam & RushAttempt == 1, Yards.Gained,0))
NFL <- mutate(NFL, AwayRushYards = ifelse(posteam == AwayTeam & RushAttempt == 1, Yards.Gained,0))
NFL$HomeRushYards <- as.integer(NFL$HomeRushYards)
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomeRush = sum(HomeRushYards, na.rm = T))
NFL$AwayRushYards <- as.integer(NFL$AwayRushYards)
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayRush = sum(AwayRushYards, na.rm=T))
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomeYards = HomeRush+HomePass)
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayYards = AwayRush+AwayPass)

#Create overtime variable
NFL <- mutate(NFL, Overtime = ifelse(qtr == 5, 1,0))
```

```{r,echo=FALSE}
#Create new Pass variables
NFL$PassAttempt <- as.integer(NFL$PassAttempt)
NFL <- mutate(NFL, HomePassCount = ifelse(posteam == HomeTeam & PassOutcome == "Complete", 1,0))
NFL <- mutate(NFL, AwayPassCount = ifelse(posteam == AwayTeam & PassOutcome == "Complete", 1,0))
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomePasses = sum(HomePassCount, na.rm = T))
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayPasses = sum(AwayPassCount, na.rm=T))
NFL <- mutate(NFL, HomePassAttemptCount = ifelse(posteam == HomeTeam & PassAttempt == 1, 1,0))
NFL <- mutate(NFL, AwayPassAttemptCount = ifelse(posteam == AwayTeam & PassAttempt == 1, 1,0))
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomePassAttempts = sum(HomePassAttemptCount, na.rm = T))
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayPassAttempts = sum(AwayPassAttemptCount, na.rm=T))
```

```{r,echo=FALSE}
#Add Play Counts
NFL <- mutate(NFL, HomePlayCount = ifelse(posteam == HomeTeam & PlayAttempted == 1, 1,0))
NFL <- mutate(NFL, AwayPlayCount = ifelse(posteam == AwayTeam & PlayAttempted == 1, 1,0))
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomePlays = sum(HomePlayCount, na.rm = T))
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayPlays = sum(AwayPlayCount, na.rm=T))
```

```{r,echo=FALSE}
#Add First Downs
NFL <- mutate(NFL, HomeFirstDownCount = ifelse(posteam == HomeTeam & FirstDown == 1, 1,0))
NFL <- mutate(NFL, AwayFirstDownCount = ifelse(posteam == AwayTeam & FirstDown == 1, 1,0))
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomeFirstDowns = sum(HomeFirstDownCount, na.rm = T))
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayFirstDowns = sum(AwayFirstDownCount, na.rm=T))
```

```{r,echo=FALSE}
#Add Drive Counts
NFL <- mutate(NFL, HomeDrivesCount = ifelse(posteam == HomeTeam, Drive,0))
NFL <- mutate(NFL, AwayDrivesCount = ifelse(posteam == AwayTeam, Drive,0))
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomeDrives = length(unique(HomeDrivesCount)) - 1)
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayDrives = length(unique(AwayDrivesCount)) - 1)
NFL <- mutate(NFL, HomeRushAttemptCount = ifelse(posteam == HomeTeam & RushAttempt == 1, 1,0))
NFL <- mutate(NFL, AwayRushAttemptCount = ifelse(posteam == AwayTeam & RushAttempt == 1, 1,0))
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomeRushAttempts = sum(HomeRushAttemptCount, na.rm = T))
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayRushAttempts = sum(AwayRushAttemptCount, na.rm=T))
```

```{r,echo=FALSE}
#Add Possession Time
NFL$PlayTimeDiff <- as.integer(NFL$PlayTimeDiff)
NFL <- mutate(NFL, HomePossessionTime = ifelse(posteam == HomeTeam, PlayTimeDiff,0))
NFL <- mutate(NFL, AwayPossessionTime = ifelse(posteam == AwayTeam, PlayTimeDiff,0))
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomePossession = sum(HomePossessionTime, na.rm = T))
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayPossession = sum(AwayPossessionTime, na.rm = T))        
```

```{r,echo=FALSE}
#Add Turnovers
NFL$InterceptionThrown <- as.integer(NFL$InterceptionThrown)
NFL <- mutate(NFL, HomeTurnoverCount = ifelse(posteam == HomeTeam & (InterceptionThrown == 1 | !is.na(RecFumbTeam)), 1,0))
NFL <- mutate(NFL, AwayTurnoverCount = ifelse(posteam == AwayTeam & (InterceptionThrown == 1 | !is.na(RecFumbTeam)), 1,0))
NFL <- NFL %>% group_by(GameID)  %>% mutate(HomeTurnovers = sum(HomeTurnoverCount))
NFL <- NFL %>% group_by(GameID)  %>% mutate(AwayTurnovers = sum(AwayTurnoverCount))    
```

```{r,echo=FALSE}
#Test Code
getmode <- function(v) {
  uniqv <- unique(v)
  uniqv[which.max(tabulate(match(v, uniqv)))]
}
```

```{r,echo=FALSE,message=FALSE}
#Creating data set Passing
Passing <- group_by(NFL, GameID) %>% 
  summarise(HomeAttempts = max(HomePassAttempts), AwayAttempts = max(AwayPassAttempts), HomePassTotal = 
              max(HomePasses), AwayPassTotal = max(AwayPasses), Home = getmode(HomeTeam), Away = getmode(AwayTeam),
            HomeFirsts = max(HomeFirstDowns), AwayFirsts = max(AwayFirstDowns), GameDate = getmode(Date),
            HomeTime = max(HomePossession), AwayTime = max(AwayPossession), Hometurns = max(HomeTurnovers),
            Awayturns = max(AwayTurnovers))   
```

```{r,echo=FALSE,message=FALSE}
#Creating data set with desired variables
NFL_Game <- group_by(NFL, GameID) %>% 
  summarise( GameDate = getmode(Date), Home = getmode(HomeTeam), Away = getmode(AwayTeam), HomePlays = max(HomePlays), 
             AwayPlays = max(AwayPlays), HomeFirsts = max(HomeFirstDowns), AwayFirsts = max(AwayFirstDowns),
             Overtime = max(Overtime), HomeDrives = max(HomeDrives), AwayDrives = max(AwayDrives), 
             HomeScore = max(FinalHomeScore), AwayScore = max(FinalAwayScore), HomeWin = max(HomeWin),
             HomePass = max(HomePass), AwayPass = max(AwayPass),  HomePassTotal = max(HomePasses), 
             AwayPassTotal = max(AwayPasses),HomePassAttempts = max(HomePassAttempts), AwayPassAttempts = max(AwayPassAttempts),
             HomeRush = max(HomeRush), AwayRush = max(AwayRush), HomeRushAttempts = max(HomeRushAttempts),
             AwayRushAttempts = max(AwayRushAttempts), HomeYards = max(HomeYards), AwayYards = max(AwayYards),
             HomePossession = (max(HomePossession)/60), AwayPossession = (max(AwayPossession)/60),
             HomeTurnovers = max(HomeTurnovers), AwayTurnovers = max(AwayTurnovers)
  )       
```

```{r,echo=FALSE}
#Adding stats variables to NFL_Game
NFL_Game <- mutate(NFL_Game, HomePassPercent = (HomePassTotal/HomePassAttempts)*100, AwayPassPercent 
                   = (AwayPassTotal/AwayPassAttempts)*100, HomeYardsPerPass = HomePass/HomePassAttempts, 
                   AwayYardsPerPass = AwayPass/AwayPassAttempts, HomeYardsPerRush = HomeRush/HomeRushAttempts,
                   AwayYardsPerRush = AwayRush/AwayRushAttempts, YardsPlayHome = HomeYards/HomePlays, 
                   YardsPlayAway = AwayYards/AwayPlays)   
```

```{r,echo=FALSE}
#Relocate HomeWin variable to last column
NFL_Game <- relocate(NFL_Game, HomeWin, .after = last_col())
```
```{r,echo=FALSE,message=FALSE}
#Logistical Regression model
out1=glm(HomeWin~., family = binomial(link='logit'), maxit = 100, data=NFL_Game[c(5:38)])
summary(out1)
```

```{r,echo=FALSE}
#Logistical Regression removing Home and Away Yards variables
NFL_Game1 <- NFL_Game[c(-24, -25)]

out2=glm(HomeWin~., family = binomial(link='logit'), maxit = 100, data=NFL_Game1[c(5:36)])
summary(out2)
out2$coefficients

predict(out2, NFL_Game1[1:10,5:36], type="response")
```

```{r,echo=FALSE}
#Removing scores to avoid over fitting
NFL_Game2 <- NFL_Game1[c(-12, -13)]

out3=glm(HomeWin~., family = binomial(link='logit'), maxit = 100, data=NFL_Game2[c(5:34)])
summary(out3)
out3$coefficients

predict(out3, NFL_Game2[1:10,], type="response")
```

```{r,echo=FALSE}
#Using step wise selection algorithm to find significant variables for the model
step.model <- out3 %>% stepAIC(trace = FALSE)
coef(step.model)
```

```{r,echo=FALSE}
#Final logistic regression 
out4 <- glm(HomeWin~ HomePlays + AwayPlays + AwayFirsts + Overtime + HomeDrives + HomePassTotal 
            +HomePassAttempts + AwayPassAttempts + HomeTurnovers + AwayTurnovers + AwayPassPercent
            + HomeYardsPerRush + AwayYardsPerRush + YardsPlayHome + YardsPlayAway, 
            family = binomial(link='logit'), maxit = 100, data=NFL_Game)
summary(out4)
out4$coefficients

#Predicting winning for home teams to test the model 
predict(out4, NFL_Game[1:10,], type="response")
```

```{r plot2,fig.show="hold", out.width= "50%"}
#Scatter plot YardsPalyAway vs YardsPlayHome
ggplot(data = NFL_Game) + 
  geom_point(mapping = aes(x = YardsPlayHome, y = YardsPlayAway, color = HomeWin)) +
  scale_color_gradient(low="blue", high="red")
```

```{r plot2,fig.show="hold", out.width= "50%"}
#Scatter Plot with Jitter() TurnOvers vs HomeWin
ggplot(data = NFL_Game) + 
  geom_point(mapping = aes(HomeTurnovers, AwayTurnovers, color = HomeWin), position = position_jitter()) +
  scale_color_gradient(low="blue", high="red")
```

